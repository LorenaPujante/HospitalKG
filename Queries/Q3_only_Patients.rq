
# Q3	->	Only Patients

# Parameters:
#  - Start datetime: 2023-05-26T00:00:00
#  - End datetime: 2023-06-08T23:59:59
#  - Microorganism id: 1820
#  - Patient id: 6348

	
PREFIX ho: <http://www.semanticweb.org/spatiotemporalHospitalOntology#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?p
{
	VALUES (?start ?end) {("2023-05-26T00:00:00"^^xsd:dateTime "2023-06-08T23:59:59"^^xsd:dateTime)}
	VALUES (?m_id ?p1_id) {(1820 6348)}
    
    
	# Microorganism
    ?m a ho:Microorganism;
       ho:id ?m_id .
	   
	   
	# Input Patient (p1)
	?p1 a ho:Patient;
		ho:id ?p1_id .
		
	# Events from p1, with their HU and Bed
	?ev1 ho:eventFromEpisode/ho:episodeFromPatient ?p1;
		ho:start ?ev1_start;
        ho:end ?ev1_end;
    	ho:hasLocation ?bed1.
	
	
	# Patients (different from p1) who had the Microorganism
    ?m ^ho:hasFound ?tm.
    ?tm ho:eventFromEpisode ?ep ;
        ho:start ?tm_start;
        ho:end ?tm_end.
    ?ep ho:episodeFromPatient ?p .
	
	# Events from these Patients, with their HU and Bed
    ?ev ho:eventFromEpisode ?ep ;
        ho:start ?ev_start;
        ho:end ?ev_end;
		ho:hasLocation ?bed.
	
	
	# OPTIONAL PATHS
	
	# Shared Locations between p1 and the rest (up to Area)
	OPTIONAL {
        ?bed1 ho:placedIn* ?mid.
		?mid (^ho:placedIn)* ?bed.
		FILTER (!regex(str(?mid), "http://www.semanticweb.org/spatiotemporalHospitalOntology#(Floor|Building)/.+"))
    }
			
    # Rooms that are Next_To but that are from different Areas
    OPTIONAL {
		?bed ho:placedIn ?room.
		?bed1 ho:placedIn ?room1.
		OPTIONAL {?room ?relNX1 ?room1.
					FILTER((str(?relNX1) = "http://www.semanticweb.org/spatiotemporalHospitalOntology#nextTo"))}
		OPTIONAL {?room1 ?relNX2 ?room.
					FILTER((str(?relNX2) = "http://www.semanticweb.org/spatiotemporalHospitalOntology#nextTo"))}
		OPTIONAL {?room1 ho:placedIn+ ?area1.
					?area1 a ho:Area.}
		OPTIONAL {?room (ho:placedIn)+ ?area.
					?area a ho:Area.}
		FILTER(?area1 != ?area  ||  (isBlank(?area1) && isBlank(?area)))
	}
    
	# Areas that are in the same LogicZone
	OPTIONAL {
		?bed1 ho:placedIn+ ?area1.
		?area1 a ho:Area.
		?bed ho:placedIn+ ?area.
		?area a ho:Area.
		?area1 ^ho:hasArea ?lz.
        ?area ^ho:hasArea ?lz.
		
		FILTER(?area1 != ?area)
	}
	
	# Events that happen in the same HU
	OPTIONAL {
		?ev1 ho:hasHospUnit ?huA.
		?ev ho:hasHospUnit ?huA.
	}
	
    # If a Patient does not match any of the optional paths, it won't be included in the result
	FILTER(!isBlank(?relNX1)  ||  !isBlank(?relNX2)  ||  !isBlank(?mid)  ||  !isBlank(?lz)  ||  !isBlank(?huA))
    
    
    FILTER(?p != ?p1)
	
    FILTER((?tm_start >= ?start) && (?tm_end <= ?end))
    FILTER((?ev_start >= ?start && ?ev_end <= ?end) 
			|| (?ev_start <= ?start && ?ev_end >= ?start) 
			|| (?ev_start <= ?end && ?ev_end >= ?end))
	FILTER((?ev1_start >= ?start && ?ev1_end <= ?end) 
			|| (?ev1_start <= ?start && ?ev1_end >= ?start) 
			|| (?ev1_start <= ?end && ?ev1_end >= ?end))
	
	# Events from both Patients must happen at the same time (with a margin of occurrence on the SAME DAY)
	BIND ((DAY(?ev_start)) as ?ev_s_date)
	BIND ((DAY(?ev_end)) as ?ev_e_date)
	BIND ((DAY(?ev1_start)) as ?ev1_s_date)
	BIND ((DAY(?ev1_end)) as ?ev1_e_date)
	FILTER((?ev1_s_date > ?ev_s_date && ?ev1_s_date <=  ?ev_e_date) 
			|| (?ev1_s_date <= ?ev_s_date && ?ev1_e_date >= ?ev_s_date) 
			|| (?ev1_s_date >= ?ev_s_date && ?ev1_e_date <= ?ev_e_date))
}
